---
- hosts: localhost
  gather_facts: no
  tasks:
  - name: Read configuration file
    include_vars: ../global-config.yml

  - name: Install required packages
    include_tasks: install-packages.yml

  - name: Update etc/hosts
    include_tasks: update-etc-hosts.yml

  - name: Configure region in ONAP
    include_tasks: configure-region.yml


###########################################
####### Configure Region in MariaDB #######
- hosts: RANCHER
  remote_user: debian
  gather_facts: no
  vars:
    ansible_ssh_private_key_file: "config/rancher_key"
    template: !unsafe '{{.data.password}}'  
  tasks:
  
  - name: Read configuration file
    include_vars: ../global-config.yml
  - name: Add region to SO Database
    include_tasks: cloud-registration/add-region-to-SO-db.yml

####################################################
####### Fix SO BPMN endpoint for VNF adapter #######

  - name: Copy script
    copy: src={{playbook_dir}}/script-so-bpmn.sh dest=/tmp mode=0777

  - name: Execute script
    shell: cd && cd / && ./tmp/script-so-bpmn.sh

####################################################
############ Onboard & Instantiate CNF #############

- hosts: localhost
  gather_facts: no
  tasks:
  - name: Read configuration file
    include_vars: ../global-config.yml
  - name: Clone OnapSDK
    git:
      repo: 'https://gitlab.com/Orange-OpenSource/lfn/onap/python-onapsdk.git'
      dest: ../python-onapsdk
      version: develop
  - name: Copy instantiation script to python-onapsdk
    command: cp ../script.py ../python-onapsdk/src/

  - name: Clone demo repository
    git:
      repo: 'https://github.com/onap/demo.git'
      dest: ../demo
  - name: Make vFW_CNF_CDS usecase
    shell: cd ../demo/heat/vFW_CNF_CDS/templates && make
  - name: Copy zip to csar-prepare directory
    shell: cp ../demo/heat/vFW_CNF_CDS/templates/vfw_k8s_demo.zip ../csar-prepare/{{service_name}}_CNF.zip

  - name: Read values from CBA TOSCA.meta
    include_tasks: config/read_model_name_version_from_cba_tosca.yml
  #- name: Get vf_module_labels
  #  shell: cd ../csar-prepare/{{service_name}}_CNF && ls -1 *.yaml | sed 's/\.yaml//g'
  #  register: vf_modules_labels
  #- name: print
  #  debug:
  #    msg: "{{vf_modules_labels.stdout_lines}}"
  - name: Run onboarding and instantiation script
    shell: cd ../python-onapsdk/src && pipenv install --python=python3.8 && pipenv run python script.py "{{vendor}}" "{{customer}}" "{{region_details.cloud_owner}}" "{{region_details.region_id}}" "{{region_details.tenant}}" "{{service_name}}" "{{template_name.stdout}}" "{{template_version.stdout}}" "{{k8s_rb_profile_name}}" "{{k8s_rb_profile_namespace}}"
