- name: Check if Cloud Region exisits
  uri:
    url: https://{{ONAP_k8s_IP}}:30233/aai/v16/cloud-infrastructure/cloud-regions/cloud-region/{{region_details.cloud_owner}}/{{region_details.region_id}}
    url_username: "{{ AAI_user }}"
    url_password: "{{ AAI_pass }}"
    force_basic_auth: yes
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      X-FromAppId: "Ansible"
      X-TransactionId: "get_aai_subscr"
    method: GET
    status_code: 200, 404
    return_content: yes
    validate_certs: False
  register: checkRegion

- name: Prepare create-region.json
  copy:
    dest: tmp/create-region.json
    content: |
      {
          "cloud-owner": "{{region_details.cloud_owner}}",
          "cloud-region-id": "{{region_details.region_id}}",
          "cloud-type": "{{region_details.type}}",
          "owner-defined-type": "t1",
          "cloud-region-version": "1.0",
          "complex-name": "{{region_details.complex}}",
          "cloud-zone": "CloudZone",
          "sriov-automation": false
      }
  when: checkRegion.status == 404

- name: Create Region
  uri:
    url: https://{{ONAP_k8s_IP}}:30233/aai/v16/cloud-infrastructure/cloud-regions/cloud-region/{{region_details.cloud_owner}}/{{region_details.region_id}}
    url_username: "{{ AAI_user }}"
    url_password: "{{ AAI_pass }}"
    force_basic_auth: yes
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      X-FromAppId: "Ansible"
      X-TransactionId: "get_aai_subscr"
    method: PUT
    status_code: 201
    return_content: yes
    validate_certs: False
    body_format: json
    body: "{{ lookup('file','tmp/create-region.json') }}"
  when: checkRegion.status == 404
